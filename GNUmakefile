#**************************************************************************************************
# MIT License
#
# Copyright (c) 2017 NAGAYASU Shinya
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#---------------------------------------------------------------------------------------------------
#
# @file
# @brief 複数のバイナリツリーを生成可能なビルドシステムのトップメイクファイル．
#
# ビルドするときは, 出力用ディレクトリを作ってそこで make してください.
# 元のソースコードツリーには一切変更・追加などをしません.
# 全ての生成物は作成した出力用ディレクトリにおかれます.
#
# $ mkdir outputs
# $ cd outputs
# $ make -f ../GNUmakefile
#
# あるモジュールに依存する .o だけをクリーンしたい場合は,
# clean-MODULE としてください.
# たとえば下記のようにすると, libbsp.a に依存する .o だけ削除されます.
#
# $ make -f ..\GNUmakefile clean-bsp
#
# @author    NAGAYASU Shinya
# @copyright 2017 NAGAYASU Shinya
# @attention Do NOT edit this file if you do not know what you are doing.
#
#**************************************************************************************************

#--------------------------------------------------------------------------------------------------
# ディレクトリ変数の初期化．CURDIR (== バイナリツリーのトップディレクトリ) からの相対パス表記.
#--------------------------------------------------------------------------------------------------

# このトップメイクファイルがおいてあるディレクトリ．
TOP_DIR := $(patsubst %/,%,$(dir $(firstword $(MAKEFILE_LIST))))

# ソースツリーのトップ．
SOURCE_TREE_DIR := $(TOP_DIR)/src

# 外部ライブラリのトップ.
LIBRARY_TREE_DIR := $(TOP_DIR)/lib

# ビルドに必要なスクリプト・サブメイクファイルがおいてあるディレクトリ．
BUILD_DIR := $(TOP_DIR)/build

#--------------------------------------------------------------------------------------------------
# makeの引数として make QUIET=  とすると、コマンド行をエコーできる.
#--------------------------------------------------------------------------------------------------

QUIET := @
ifeq "$(QUIET)"  "@"
DEVNUL := > /dev/null 2>&1
else
DEVNUL :=
endif

#--------------------------------------------------------------------------------------------------
# all ターゲット.
# make.exe にターゲットを指定しないときに使われる.
# 他のターゲット項目が現れるより先に書いておかないといけない.
#--------------------------------------------------------------------------------------------------

all:

#--------------------------------------------------------------------------------------------------
# デバッグレベル設定.
#
# release版: RELEASE_BUILD
# debug版  : DEBUG_BUILD   (デフォルト)
#
# release版でビルドしたいときは,
# makeのコマンド引数から
# >make VARIANT=RELEASE_BUILD
# と指定.
#--------------------------------------------------------------------------------------------------
VARIANT := DEBUG_BUILD

include $(BUILD_DIR)/set_toolchain.mk
include $(BUILD_DIR)/define_macro.mk
include $(BUILD_DIR)/define_suffix_rule.mk
include $(BUILD_DIR)/define_pattern_rule.mk
include $(BUILD_DIR)/clean_all.mk

#--------------------------------------------------------------------------------------------------
# モジュールのサブメイクファイルで使用する変数の初期化．
#--------------------------------------------------------------------------------------------------

CLEAR_LOCAL_VARIABLE := $(BUILD_DIR)/clear_local_variable.mk
CREATE_LIBRARY       := $(BUILD_DIR)/create_library.mk
CREATE_EXECUTABLE    := $(BUILD_DIR)/create_executable.mk

#--------------------------------------------------------------------------------------------------
# 実行環境チェック．
#--------------------------------------------------------------------------------------------------

$(if $(filter $(notdir $(TOP_DIR)),$(notdir $(CURDIR))),$(error Please run the makefile from the binary tree.))
ifeq "$(TOP_DIR)" "."
$(error Please run the makefile from the binary tree.)
endif

#--------------------------------------------------------------------------------------------------
# ソースツリーを探索パスに指定．
#--------------------------------------------------------------------------------------------------

vpath %.so  $(LIBRARY_TREE_DIR)
vpath %.c   $(SOURCE_TREE_DIR)
vpath %.s   $(SOURCE_TREE_DIR)

#==================================================================================================
# 全体の情報をまとめる変数.
# 各module.mkの情報を格納する.
#==================================================================================================

# ソースツリーのトップからの相対パスになるようにする．

module-submake-list := $(shell find $(SOURCE_TREE_DIR) -name module.mk)
target-submake-list := $(shell find $(SOURCE_TREE_DIR) -name target.mk)

all_targets :=
all_objects :=
all_sources :=
all_dependencies :=
output-directories :=

#--------------------------------------------------------------------------------------------------
# モジュールのメイクファイルをインクルード.
#--------------------------------------------------------------------------------------------------

include $(target-submake-list)
include $(module-submake-list)


ifneq "$(MAKECMDGOALS)" "clean"
# ディレクトリを生成するためのダミー変数.
# クリーンのときはディレクトリ生成する必要ない.
  dummy-create-output-directories := \
    $(shell for f in $(output-directories); do test -d $$f || mkdir -p $$f; done)
endif


.PHONY: all
all: $(all_targets)
all_objects      += $(call source-to-object,    $(all_sources))
all_dependencies += $(call source-to-dependence,$(all_sources))

#--------------------------------------------------------------------------------------------------
# ヘッダの依存関係ファイルをインクルード．
#--------------------------------------------------------------------------------------------------

ifneq "$(MAKECMDGOALS)" "clean"
  -include $(all_dependencies)
endif
